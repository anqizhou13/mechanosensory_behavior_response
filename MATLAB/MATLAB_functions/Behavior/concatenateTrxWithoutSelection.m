function trx_concatenated=concatenateTrx(adresse)
% concatenateTrx gets all trx*.mat files contained in subfolders from the
% folder in the 'adresse' field, and concatenates them together.

files   = subdir(fullfile(adresse,'trx*.mat')); % gets address of all trx files
n_files = length(files); % gets number of trx files

for j = 1 : n_files % scan all trx files
    load(files(j).name); % get trx file
    ToDelete={'full_path';'numero_larva';'protocol';'pipeline';'stimuli';...
        'neuron';'x_spine';'y_spine';'x_contour';'y_contour';'straight_proba';...
        'bend_proba';'curl_proba';'ball_proba';'straight_and_light_bend_proba';...
        'x_neck_down';'y_neck_down';'x_neck_top';'y_neck_top';'x_neck';'y_neck';...
        'x_head';'y_head';'x_tail';'y_tail';'prod_scal_1';'prod_scal_2';...
        'angle_upper_lower_smooth_5';'angle_upper_lower_deriv_smooth_5';...
        'angle_downer_upper_smooth_5';'angle_downer_upper_deriv_smooth_5';...
        'eig_smooth_5';'eig_deriv_smooth_5';'tail_velocity_norm_smooth_5';...
        'motion_to_u_tail_head_smooth_5';'motion_to_v_tail_head_smooth_5';...
        'd_eff_tail_norm_smooth_5';'d_eff_tail_norm_deriv_smooth_5';'run';...
        'cast';'stop';'hunch';'back';'roll';'small_motion';'start_stop';...
        't_start_stop';'n_duration';'nb_action';'As_smooth_5';'start_stop_large';...
        't_start_stop_large';'duration_large';'n_duration_large';'nb_action_large';...
        'start_stop_large_small';'t_start_stop_large_small';'duration_large_small';...
        'n_duration_large_small';'nb_action_large_small';'run_large';'cast_large';...
        'stop_large';'hunch_large';'back_large';'roll_large';'run_weak';'cast_weak';...
        'stop_weak';'hunch_weak';'back_weak';'roll_weak';'run_strong';'cast_strong';...
        'stop_strong';'hunch_strong';'back_strong';'roll_strong';'proba_global_state';...
        'd_eff_head_norm_smooth_5';'d_eff_head_norm_deriv_smooth_5'};
    trx=fRMField(trx, ToDelete);
    
    if j==1
        trx_concatenated=trx; % if first file, create trx_out as a structure that will contain all informations
    else
        trx_concatenated = [trx_concatenated; trx]; % if after, concatenate trx files
    end
end

clear trx

end